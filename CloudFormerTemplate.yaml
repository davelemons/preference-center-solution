Region us-east-1
AWS CloudFormation Template
You can save the AWS CloudFormation template in an existing S3 bucket in your account by selecting a bucket and clicking on the Save button below. Alternatively, you can cut and paste the template content below and store it locally or in your source control repository. NOTE: If you save the template to an S3 bucket in a different AWS region from the one used to create the template, launching it in the new AWS region will likely fail since the template may have hardcoded values based on the original AWS region.
Template Name 
cloudformer.template
 S3 Bucket 
cloudtrail-awslogs-292920045127-s1i3zvrh-isengard-do-not-delete (us-east-1)

Btn save template Btn cancel
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "distd17bae2offx9y5cloudfrontnet": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "PriceClass": "PriceClass_100",
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3-davelem-scratchpad-preference-center",
            "ViewerProtocolPolicy": "redirect-to-https",
            "MinTTL": 0,
            "AllowedMethods": [
              "HEAD",
              "GET"
            ],
            "CachedMethods": [
              "HEAD",
              "GET"
            ],
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              }
            }
          },
          "Origins": [
            {
              "DomainName": "davelem-scratchpad-preference-center.s3.amazonaws.com",
              "Id": "S3-davelem-scratchpad-preference-center",
              "S3OriginConfig": {
                "OriginAccessIdentity": "origin-access-identity/cloudfront/E3MRF4MPT7GPWE"
              }
            }
          ],
          "Restrictions": {
            "GeoRestriction": {
              "RestrictionType": "none",
              "Locations": [

              ]
            }
          },
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": "true",
            "MinimumProtocolVersion": "TLSv1"
          }
        }
      }
    },
    "tablepreferenceCenterMetadata": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "preferenceCenterID",
            "AttributeType": "S"
          },
          {
            "AttributeName": "projectID",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "projectID",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "preferenceCenterID",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    },
    "s3davelemscratchpadpreferencecenter": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "s3preferencecenter2targetbucket1elhmsi1urwub": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "WebsiteConfiguration": {
          "IndexDocument": "index.html"
        },
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "topicdynamodb": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "dynamodb"
      }
    },
    "snspolicydynamodb": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicdynamodb"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicdynamodb"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "292920045127"
                }
              }
            }
          ]
        }
      }
    },
    "s3policydavelemscratchpadpreferencecenter": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3davelemscratchpadpreferencecenter"
        },
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "PolicyForCloudFrontPrivateContent",
          "Statement": [
            {
              "Sid": "1",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E3MRF4MPT7GPWE"
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "s3davelemscratchpadpreferencecenter"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Description": "CloudFormerTest"
}